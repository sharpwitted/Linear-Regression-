%matplotlib inline
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv('C:\Users\Dell\Desktop\marks.csv')
print(data.shape)
data.head(10)
X=data['1st IA'].values
Y=data['SEM'].values
mean_x=np.mean(X)
mean_y=np.mean(Y)
m=len(X)
numer=0
denom=0
for i in range(m):
    numer+=(X[i]-mean_x)*(Y[i]-mean_y)
    denom+=(X[i]-mean_x)**2
b1=numer / denom
b0=mean_y - (b1*mean_x)
print(b1,b0)
max_x=np.max(X)+100
min_x=np.min(X)-100
x=np.linspace(min_x,max_x,1000)
y=b0+b1*x
plt.plot(x,y,color='#58b970',label='Regression line')
plt.scatter(X,Y,c='#ef5423',label='scatter Plot')
plt.xlabel("1st IA")
plt.ylabel("SEM")
plt.legend()
plt.show()
--------------------------
ss_t=0
ss_r=0
for i in range(m):
    y_pred=b0+b1*X[i]
    ss_t+=(Y[i]-mean_y)**2
    ss_r+=(Y[i]-y_pred)**2
r2=1-(ss_r/ss_t)
print(r2)
-------------------------------
or
---------------------------
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
X=X.reshape((m,1))
reg=LinearRegression()
reg=reg.fit(X,Y)
Y_pred=reg.predict(X)
r2_score=reg.score(X,Y)
print(r2_score)